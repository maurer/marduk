# Generated by carnix 0.6.6: carnix -o hello.nix --src ./. Cargo.lock --standalone
with import <nixpkgs> {};
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  marduk = f: marduk_0_1_0 { features = marduk_0_1_0_features { marduk_0_1_0 = f; }; };
  aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.11.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
    inherit dependencies buildDependencies features;
  };
  ascii_0_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ascii";
    version = "0.7.1";
    authors = [ "Thomas Bahn <thomas@thomas-bahn.net>" "Torbjørn Birch Moltu <t.b.moltu@lyse.net>" "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0fy9rh316vcc4v0k8d1p2gi3a3wpiwj5bm2mw0yqzs8xvz6yd1ax";
    inherit dependencies buildDependencies features;
  };
  aster_0_41_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aster";
    version = "0.41.0";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "012bhrpxy7xq58g1jcm3cl8nhrk7iz5zf5wdzlfhxm2g36xaqz4m";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.8";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "03w1q3h4w7vhcdxdwa9cirjkzdjz3ja636fj3g64659z6yax6p6d";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "0vj1dgsivxci5r43w9d56yb98g3r7ff75zr5f592j7yizznshh2r";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  bap_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bap";
    version = "0.1.0";
    authors = [ "Matthew Maurer <maurer@matthewmaurer.org>" ];
    sha256 = "0kbmn3jsqa9w4nm9wmsvid3flibnsrkh3kwqvrmz7zbp1n7biq3d";
    inherit dependencies buildDependencies features;
  };
  bap_sys_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bap-sys";
    version = "0.1.0";
    authors = [ "Matthew Maurer <maurer@matthewmaurer.org>" ];
    sha256 = "0l9ma15g5jxv2h15gmkfp42sjk0qajpf4if3w9m01hirbwx0iscd";
    build = "build.rs";
    LIBCLANG_PATH = "${llvmPackages.clang-unwrapped.lib}/lib";
    inherit dependencies buildDependencies features;
  };
  bindgen_0_30_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bindgen";
    version = "0.30.0";
    authors = [ "Jyun-Yan You <jyyou.tw@gmail.com>" "Emilio Cobos Álvarez <emilio@crisal.io>" "Nick Fitzgerald <fitzgen@gmail.com>" "The Servo project developers" ];
    sha256 = "158abwkrmsadp5b4ca50l06qks7hhlim3hq6vy4l6p2j1726qbd8";
    libPath = "src/lib.rs";
    crateBin = [ {  name = "bindgen";  path = "src/main.rs"; } ];
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  bit_vec_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bit-vec";
    version = "0.4.4";
    authors = [ "Alexis Beingessner <a.beingessner@gmail.com>" ];
    sha256 = "06czykmn001z6c3a4nsrpc3lrj63ga0kzp7kgva9r9wylhkkqpq9";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_8_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.8.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0whaj3969ysqxzk620sk1isvq6vh85516f2fplvqjrw3syz44sb2";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "03cj21di3hck3w8a09z2b9a4jv0aay7a4bjdd1f86h3a4icl68m1";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "194markaj4bq7khc3243yqxkfa5w9lyd481168afwz1c4w43yfba";
    inherit dependencies buildDependencies features;
  };
  cexpr_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cexpr";
    version = "0.2.3";
    authors = [ "Jethro Beekman <jethro@jbeekman.nl>" ];
    sha256 = "1zgxd7waiyl046pkd039gcyw9gw7japndkm3c2371975bbqkhb7j";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  clang_sys_0_19_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clang-sys";
    version = "0.19.0";
    authors = [ "Kyle Mayes <kyle@mayeses.com>" ];
    sha256 = "03kxnrmkzvrgl2yfk1dy2438cnsswndndpij1prcwq2y6dhzpdmp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  clap_2_31_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.31.2";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "0r24ziw85a8y1sf2l21y4mvv5qan3rjafcshpyfsjfadqfxsij72";
    inherit dependencies buildDependencies features;
  };
  combine_2_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "combine";
    version = "2.5.2";
    authors = [ "Markus Westerlind <marwes91@gmail.com>" ];
    sha256 = "0l2zqa462lr8ppylghybx7zdg8wr55in06q2d02pam0r9x8p9wx2";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  enum_primitive_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "enum_primitive";
    version = "0.1.1";
    authors = [ "Anders Kaseorg <andersk@mit.edu>" ];
    sha256 = "1a225rlsz7sz3nn14dar71kp2f9v08s3rwl6j55xp51mv01f695y";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.4.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0nrx04p4xa86d5kc7aq4fwvipbqji9cmgy449h47nc9f1chafhgg";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_5_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.5.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0dlsfl22hf7n4y2s9n2qaxsf0m7ivam22p2j9a6vdrqhzz329icv";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  glob_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "glob";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "104389jjxs8r2f5cc9p0axhjmndgln60ih5x4f00ccgg9d3zarlf";
    inherit dependencies buildDependencies features;
  };
  humantime_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "humantime";
    version = "1.1.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" ];
    sha256 = "1lzdfsfzdikcp1qb6wcdvnsdv16pmzr7p7cv171vnbnyz2lrwbgn";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.0";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1xfc39237ldzgr8x8wcflgdr8zssi3wif7g2zxc02d94gzkjsw83";
    inherit dependencies buildDependencies features;
  };
  libloading_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libloading";
    version = "0.4.3";
    authors = [ "Simonas Kazlauskas <libloading@kazlauskas.me>" ];
    sha256 = "1cgb6xbadm59gc3cq733wrzsp59914hrjam0fan5gn1z100b6319";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  marduk_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "marduk";
    version = "0.1.0";
    authors = [ "Matthew Maurer <matthew.r.maurer@gmail.com>" ];
    src = ./.;
    inherit dependencies buildDependencies features;
  };
  memchr_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "1.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0dfb8ifl9nrc9kzgd5z91q6qg87sh285q1ih7xgrsglmqfav9lg7";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  mktemp_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mktemp";
    version = "0.3.1";
    authors = [ "Sam Giles <sam.e.giles@gmail.com>" ];
    sha256 = "120zkgx4y0jb97d9732wqjgsr2mnwj8v9waglkqffnww4z26aj9x";
    inherit dependencies buildDependencies features;
  };
  mycroft_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mycroft";
    version = "0.0.1";
    authors = [ "Matthew Maurer <matthew.r.maurer@gmail.com>" ];
    sha256 = "01q3s5cxvn66p60wgd2mhngpf4i0f25nyax4qmnlpfzfv3b2h9ms";
    inherit dependencies buildDependencies features;
  };
  mycroft_macros_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mycroft-macros";
    version = "0.0.1";
    authors = [ "Matthew Maurer <matthew.r.maurer@gmail.com>" ];
    sha256 = "0dch8vpaqasj654l8jinfbl8j7gy8mjw5yypjvd2nc3c2pyyd85k";
    inherit dependencies buildDependencies features;
  };
  mycroft_macros_impl_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mycroft-macros-impl";
    version = "0.0.1";
    authors = [ "Matthew Maurer <matthew.r.maurer@gmail.com>" ];
    sha256 = "1nhc4qwlwb49fhg9axwnf0wx71m0s32whlra6mg96cifxw4yzp1j";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  mycroft_support_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mycroft-support";
    version = "0.0.1";
    authors = [ "Matthew Maurer <matthew.r.maurer@gmail.com>" ];
    sha256 = "09779bh8lkygg3x7g3950f8vchp0kmfwrzv3jmy4n2zq6n74fjzp";
    inherit dependencies buildDependencies features;
  };
  nom_3_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nom";
    version = "3.2.1";
    authors = [ "contact@geoffroycouprie.com" ];
    sha256 = "1vcllxrz9hdw6j25kn020ka3psz1vkaqh1hm3yfak2240zrxgi07";
    inherit dependencies buildDependencies features;
  };
  num_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1632gczzrmmxdsj3jignwcr793jq8vxw3qkdzpdvbip3vaf1ljgq";
    inherit dependencies buildDependencies features;
  };
  num_bigint_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-bigint";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1vv65dypraqcqz5kvnj6x3c6ckcrvi4sl84myklasfdrxdpgczvg";
    inherit dependencies buildDependencies features;
  };
  num_complex_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-complex";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1rs1rhwcxsdamllz1p88ibi8g8s4hhx8rqvvp819x71zphgpqsa2";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.36";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fjprz9h8b04zrsnfmkkfhiw4w852bbh16hy8w9ahlcdhg77i66y";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.35";
    authors = [ "The Rust Project Developers" ];
    sha256 = "12w49r9als1ihg6rc3qkj673vwi0bmh47pzy6x4samlb07w074mi";
    inherit dependencies buildDependencies features;
  };
  num_rational_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-rational";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "09gfmmak5p77rvi2mcsqsalzi81nc93nc8ipchnjv5b8lwn8mm89";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1zdzx78vrcg3f39w94pqjs1mwxl1phyv7843hwgwkzggwcxhhf6s";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gcqhcd27gi72al5salxlp3m374qr3xnc3zh249f7dsrxc9rmgh0";
    inherit dependencies buildDependencies features;
  };
  peeking_take_while_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "peeking_take_while";
    version = "0.1.2";
    authors = [ "Nick Fitzgerald <fitzgen@gmail.com>" ];
    sha256 = "1vdaxp3c73divj5rbyb2wm9pz61rg5idgh1g7bifnllf7xhw15zr";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  proc_macro_hack_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro-hack";
    version = "0.4.0";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0abzjwf73wz27nq98kyn16kikfp051flfqkfy2g54r2cd277dgcz";
    inherit dependencies buildDependencies features;
  };
  proc_macro_hack_impl_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro-hack-impl";
    version = "0.4.0";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1j474z34hz60fs48gzqrq1znhvrmbb3y018d3jlfmbds57fxb4ri";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.2.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1y47qagi1r1f13b4b66xagr3dn9hjlvba7i6f5mcb77qhkn8yg9c";
    inherit dependencies buildDependencies features;
  };
  quasi_0_32_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quasi";
    version = "0.32.0";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "0l8j01q2r123h0fs8kypjzmkryf00nv39kajjrs6sgv9jh282cng";
    inherit dependencies buildDependencies features;
  };
  quasi_codegen_0_32_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quasi_codegen";
    version = "0.32.0";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "1jky7rxd76a0f5a7630lnnjbkk72aycgyawrl6kig9ggzfjmfi87";
    inherit dependencies buildDependencies features;
  };
  quick_error_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "1.2.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "0vq41csw68ynaq2fy5dvldh4lx7pnbw6pr332kv5rvrz4pz0jnq6";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  quote_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0rzka356p113f9hdcdc8ha78qar3qd6jpap9wnf5dza9hfs2k4bc";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.22";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wrj12acx7l4hr7ag3nz8b50yhp8ancyq988bzmnnsxln67rsys0";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.37";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.10";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0cwdmcllssm984b5nnpr55rgla1yzw31kmp2imxdpgk6hvlhf1ca";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "13ikif4rfha0n222m6czyc22v7qr8adlj55glfh7h8dcjmb9c325";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0wrln6jvwmqrhyvqlw5vq9a2s4r04ja8mrybxjj9aaaar1fyvns6";
    inherit dependencies buildDependencies features;
  };
  rustc_serialize_0_3_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-serialize";
    version = "0.3.24";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rfk6p66mqkd3g36l0ddlv2rvnp1mp3lrq5frq9zz5cbnz5pmmxn";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  syntex_0_58_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syntex";
    version = "0.58.1";
    authors = [ "erick.tryzelaar@gmail.com" ];
    sha256 = "07a23alvg3wvl0f5hpjb2w9fvq9b5p5n7xgi81lcgmhxgdkwv8a3";
    inherit dependencies buildDependencies features;
  };
  syntex_errors_0_58_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syntex_errors";
    version = "0.58.1";
    authors = [ "erick.tryzelaar@gmail.com" ];
    sha256 = "09z7rhivm1akj97b2vpb2lqsi5dhpkjzzwkli14m9phnwafjy25d";
    inherit dependencies buildDependencies features;
  };
  syntex_pos_0_58_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syntex_pos";
    version = "0.58.1";
    authors = [ "erick.tryzelaar@gmail.com" ];
    sha256 = "1d8kkg1jzdjrqp1bcfvw2kq46pjkzvsrz0j9vj82yxdgch0vnkb3";
    inherit dependencies buildDependencies features;
  };
  syntex_syntax_0_58_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syntex_syntax";
    version = "0.58.1";
    authors = [ "erick.tryzelaar@gmail.com" ];
    sha256 = "1iz4xql4jhncydcwsa5dh6jlcqrs51if8515cka5krannrb0iff1";
    inherit dependencies buildDependencies features;
  };
  term_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "term";
    version = "0.4.6";
    authors = [ "The Rust Project Developers" "Steven Allen" ];
    sha256 = "14fll0l6247b4iyxnj52lpvxhd10yxbkmnpyxrn84iafzqmp56kv";
    inherit dependencies buildDependencies features;
  };
  termcolor_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termcolor";
    version = "0.3.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0w609sa1apl1kii67ln2g82r4rrycw45zgjq7mxxjrx1fa21v05z";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.9.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "18jg79ndjlwndz01mlbh82kkr2arqm658yn5kwp65l5n1hz8w4yb";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  uuid_0_1_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.1.18";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0jqkbhasrych5g3wqh5cmpym40562dvf4fwsz1a7ksa67ypz2szq";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagavía <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "Félix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "07sgxp3cf1a4cxm9n3r27fcvqmld32bl2576mrcahnvm34j11xay";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  which_1_0_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "which";
    version = "1.0.5";
    authors = [ "fangyuanziti <tiziyuanfang@gmail.com>" ];
    sha256 = "1xv34mrbbafmir51c5k7dkgnpk299aga64dx71p6ijzhl14612qj";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.4";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  wincolor_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wincolor";
    version = "0.1.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0f8m3l86pw6qi31jidqj78pgd15xj914850lyvsxkbln4f1drv47";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_4 = { features?(aho_corasick_0_6_4_features {}) }: aho_corasick_0_6_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = (f.aho_corasick_0_6_4.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  ansi_term_0_11_0 = { features?(ansi_term_0_11_0_features {}) }: ansi_term_0_11_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  ansi_term_0_11_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = (f.ansi_term_0_11_0.default or true);
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.errhandlingapi = true;
    winapi_0_3_4.processenv = true;
  }) [ winapi_0_3_4_features ];
  ascii_0_7_1 = { features?(ascii_0_7_1_features {}) }: ascii_0_7_1_ {
    features = mkFeatures (features.ascii_0_7_1 or {});
  };
  ascii_0_7_1_features = f: updateFeatures f (rec {
    ascii_0_7_1.default = (f.ascii_0_7_1.default or true);
  }) [];
  aster_0_41_0 = { features?(aster_0_41_0_features {}) }: aster_0_41_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.aster_0_41_0.syntex_syntax or false then [ syntex_syntax_0_58_1 ] else []));
    features = mkFeatures (features.aster_0_41_0 or {});
  };
  aster_0_41_0_features = f: updateFeatures f (rec {
    aster_0_41_0.clippy =
      (f.aster_0_41_0.clippy or false) ||
      (f.aster_0_41_0.unstable-testing or false) ||
      (aster_0_41_0.unstable-testing or false);
    aster_0_41_0.compiletest_rs =
      (f.aster_0_41_0.compiletest_rs or false) ||
      (f.aster_0_41_0.unstable-testing or false) ||
      (aster_0_41_0.unstable-testing or false);
    aster_0_41_0.default = (f.aster_0_41_0.default or true);
    aster_0_41_0.syntex_syntax =
      (f.aster_0_41_0.syntex_syntax or false) ||
      (f.aster_0_41_0.with-syntex or false) ||
      (aster_0_41_0.with-syntex or false);
    syntex_syntax_0_58_1.default = true;
  }) [ syntex_syntax_0_58_1_features ];
  atty_0_2_8 = { features?(atty_0_2_8_features {}) }: atty_0_2_8_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  atty_0_2_8_features = f: updateFeatures f (rec {
    atty_0_2_8.default = (f.atty_0_2_8.default or true);
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_40_features winapi_0_3_4_features ];
  backtrace_0_3_5 = { features?(backtrace_0_3_5_features {}) }: backtrace_0_3_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_7 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.backtrace-sys or false then [ backtrace_sys_0_1_16 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.winapi or false then [ winapi_0_3_4 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_5 or {});
  };
  backtrace_0_3_5_features = f: updateFeatures f (rec {
    backtrace_0_3_5.addr2line =
      (f.backtrace_0_3_5.addr2line or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.backtrace-sys =
      (f.backtrace_0_3_5.backtrace-sys or false) ||
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (backtrace_0_3_5.libbacktrace or false);
    backtrace_0_3_5.coresymbolication =
      (f.backtrace_0_3_5.coresymbolication or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.dbghelp =
      (f.backtrace_0_3_5.dbghelp or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.default = (f.backtrace_0_3_5.default or true);
    backtrace_0_3_5.dladdr =
      (f.backtrace_0_3_5.dladdr or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.findshlibs =
      (f.backtrace_0_3_5.findshlibs or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.libbacktrace =
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.libunwind =
      (f.backtrace_0_3_5.libunwind or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.rustc-serialize =
      (f.backtrace_0_3_5.rustc-serialize or false) ||
      (f.backtrace_0_3_5.serialize-rustc or false) ||
      (backtrace_0_3_5.serialize-rustc or false);
    backtrace_0_3_5.serde =
      (f.backtrace_0_3_5.serde or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.serde_derive =
      (f.backtrace_0_3_5.serde_derive or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.winapi =
      (f.backtrace_0_3_5.winapi or false) ||
      (f.backtrace_0_3_5.dbghelp or false) ||
      (backtrace_0_3_5.dbghelp or false);
    backtrace_sys_0_1_16.default = true;
    cfg_if_0_1_2.default = true;
    libc_0_2_40.default = true;
    rustc_demangle_0_1_7.default = true;
    winapi_0_3_4.dbghelp = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processthreadsapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winnt = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_7_features backtrace_sys_0_1_16_features libc_0_2_40_features winapi_0_3_4_features ];
  backtrace_sys_0_1_16 = { features?(backtrace_sys_0_1_16_features {}) }: backtrace_sys_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_9 ]);
  };
  backtrace_sys_0_1_16_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_16.default = (f.backtrace_sys_0_1_16.default or true);
    cc_1_0_9.default = true;
    libc_0_2_40.default = true;
  }) [ libc_0_2_40_features cc_1_0_9_features ];
  bap_0_1_0 = { features?(bap_0_1_0_features {}) }: bap_0_1_0_ {
    dependencies = mapFeatures features ([ bap_sys_0_1_0 bit_vec_0_4_4 enum_primitive_0_1_1 lazy_static_0_2_11 mktemp_0_3_1 num_0_1_42 ]);
    features = mkFeatures (features.bap_0_1_0 or {});
  };
  bap_0_1_0_features = f: updateFeatures f (rec {
    bap_0_1_0.default = (f.bap_0_1_0.default or true);
    bap_0_1_0.rustc-serialize =
      (f.bap_0_1_0.rustc-serialize or false) ||
      (f.bap_0_1_0.json or false) ||
      (bap_0_1_0.json or false);
    bap_sys_0_1_0.default = true;
    bit_vec_0_4_4.default = true;
    enum_primitive_0_1_1.default = true;
    lazy_static_0_2_11.default = true;
    mktemp_0_3_1.default = true;
    num_0_1_42.default = true;
  }) [ bap_sys_0_1_0_features bit_vec_0_4_4_features enum_primitive_0_1_1_features lazy_static_0_2_11_features mktemp_0_3_1_features num_0_1_42_features ];
  bap_sys_0_1_0 = { features?(bap_sys_0_1_0_features {}) }: bap_sys_0_1_0_ {
    buildDependencies = mapFeatures features ([ bindgen_0_30_0 pkg_config_0_3_9 ]);};
  bap_sys_0_1_0_features = f: updateFeatures f (rec {
    bap_sys_0_1_0.default = (f.bap_sys_0_1_0.default or true);
    bindgen_0_30_0.default = true;
    pkg_config_0_3_9.default = true;
  }) [ bindgen_0_30_0_features pkg_config_0_3_9_features ];
  bindgen_0_30_0 = { features?(bindgen_0_30_0_features {}) }: bindgen_0_30_0_ {
    dependencies = mapFeatures features ([ aster_0_41_0 cexpr_0_2_3 cfg_if_0_1_2 clang_sys_0_19_0 clap_2_31_2 lazy_static_0_2_11 peeking_take_while_0_1_2 quasi_0_32_0 regex_0_2_10 syntex_syntax_0_58_1 which_1_0_5 ]
      ++ (if features.bindgen_0_30_0.env_logger or false then [ env_logger_0_4_3 ] else [])
      ++ (if features.bindgen_0_30_0.log or false then [ log_0_3_9 ] else []));
    buildDependencies = mapFeatures features ([ quasi_codegen_0_32_0 ]);
    features = mkFeatures (features.bindgen_0_30_0 or {});
  };
  bindgen_0_30_0_features = f: updateFeatures f (rec {
    aster_0_41_0.default = true;
    aster_0_41_0.with-syntex = true;
    bindgen_0_30_0.default = (f.bindgen_0_30_0.default or true);
    bindgen_0_30_0.env_logger =
      (f.bindgen_0_30_0.env_logger or false) ||
      (f.bindgen_0_30_0.logging or false) ||
      (bindgen_0_30_0.logging or false);
    bindgen_0_30_0.log =
      (f.bindgen_0_30_0.log or false) ||
      (f.bindgen_0_30_0.logging or false) ||
      (bindgen_0_30_0.logging or false);
    bindgen_0_30_0.logging =
      (f.bindgen_0_30_0.logging or false) ||
      (f.bindgen_0_30_0.default or false) ||
      (bindgen_0_30_0.default or false);
    cexpr_0_2_3.default = true;
    cfg_if_0_1_2.default = true;
    clang_sys_0_19_0.clang_3_9 = true;
    clang_sys_0_19_0.default = true;
    clang_sys_0_19_0.runtime = true;
    clap_2_31_2.default = true;
    env_logger_0_4_3.default = true;
    lazy_static_0_2_11.default = true;
    log_0_3_9.default = true;
    peeking_take_while_0_1_2.default = true;
    quasi_0_32_0.default = true;
    quasi_0_32_0.with-syntex = true;
    quasi_codegen_0_32_0.default = true;
    regex_0_2_10.default = true;
    syntex_syntax_0_58_1.default = true;
    which_1_0_5.default = true;
  }) [ aster_0_41_0_features cexpr_0_2_3_features cfg_if_0_1_2_features clang_sys_0_19_0_features clap_2_31_2_features env_logger_0_4_3_features lazy_static_0_2_11_features log_0_3_9_features peeking_take_while_0_1_2_features quasi_0_32_0_features regex_0_2_10_features syntex_syntax_0_58_1_features which_1_0_5_features quasi_codegen_0_32_0_features ];
  bit_vec_0_4_4 = { features?(bit_vec_0_4_4_features {}) }: bit_vec_0_4_4_ {
    features = mkFeatures (features.bit_vec_0_4_4 or {});
  };
  bit_vec_0_4_4_features = f: updateFeatures f (rec {
    bit_vec_0_4_4.default = (f.bit_vec_0_4_4.default or true);
  }) [];
  bitflags_0_8_2 = { features?(bitflags_0_8_2_features {}) }: bitflags_0_8_2_ {
    features = mkFeatures (features.bitflags_0_8_2 or {});
  };
  bitflags_0_8_2_features = f: updateFeatures f (rec {
    bitflags_0_8_2.default = (f.bitflags_0_8_2.default or true);
    bitflags_0_8_2.i128 =
      (f.bitflags_0_8_2.i128 or false) ||
      (f.bitflags_0_8_2.unstable or false) ||
      (bitflags_0_8_2.unstable or false);
  }) [];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  bitflags_1_0_1 = { features?(bitflags_1_0_1_features {}) }: bitflags_1_0_1_ {
    features = mkFeatures (features.bitflags_1_0_1 or {});
  };
  bitflags_1_0_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = (f.bitflags_1_0_1.default or true);
    bitflags_1_0_1.example_generated =
      (f.bitflags_1_0_1.example_generated or false) ||
      (f.bitflags_1_0_1.default or false) ||
      (bitflags_1_0_1.default or false);
  }) [];
  byteorder_1_2_2 = { features?(byteorder_1_2_2_features {}) }: byteorder_1_2_2_ {
    features = mkFeatures (features.byteorder_1_2_2 or {});
  };
  byteorder_1_2_2_features = f: updateFeatures f (rec {
    byteorder_1_2_2.default = (f.byteorder_1_2_2.default or true);
    byteorder_1_2_2.std =
      (f.byteorder_1_2_2.std or false) ||
      (f.byteorder_1_2_2.default or false) ||
      (byteorder_1_2_2.default or false);
  }) [];
  cc_1_0_9 = { features?(cc_1_0_9_features {}) }: cc_1_0_9_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_9 or {});
  };
  cc_1_0_9_features = f: updateFeatures f (rec {
    cc_1_0_9.default = (f.cc_1_0_9.default or true);
    cc_1_0_9.rayon =
      (f.cc_1_0_9.rayon or false) ||
      (f.cc_1_0_9.parallel or false) ||
      (cc_1_0_9.parallel or false);
  }) [];
  cexpr_0_2_3 = { features?(cexpr_0_2_3_features {}) }: cexpr_0_2_3_ {
    dependencies = mapFeatures features ([ nom_3_2_1 ]);
  };
  cexpr_0_2_3_features = f: updateFeatures f (rec {
    cexpr_0_2_3.default = (f.cexpr_0_2_3.default or true);
    nom_3_2_1.default = true;
    nom_3_2_1.verbose-errors = true;
  }) [ nom_3_2_1_features ];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  clang_sys_0_19_0 = { features?(clang_sys_0_19_0_features {}) }: clang_sys_0_19_0_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 glob_0_2_11 libc_0_2_40 ]
      ++ (if features.clang_sys_0_19_0.libloading or false then [ libloading_0_4_3 ] else []));
    buildDependencies = mapFeatures features ([ glob_0_2_11 ]);
    features = mkFeatures (features.clang_sys_0_19_0 or {});
  };
  clang_sys_0_19_0_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    clang_sys_0_19_0.default = (f.clang_sys_0_19_0.default or true);
    clang_sys_0_19_0.gte_clang_3_6 =
      (f.clang_sys_0_19_0.gte_clang_3_6 or false) ||
      (f.clang_sys_0_19_0.clang_3_6 or false) ||
      (clang_sys_0_19_0.clang_3_6 or false) ||
      (f.clang_sys_0_19_0.clang_3_7 or false) ||
      (clang_sys_0_19_0.clang_3_7 or false) ||
      (f.clang_sys_0_19_0.clang_3_8 or false) ||
      (clang_sys_0_19_0.clang_3_8 or false) ||
      (f.clang_sys_0_19_0.clang_3_9 or false) ||
      (clang_sys_0_19_0.clang_3_9 or false) ||
      (f.clang_sys_0_19_0.clang_4_0 or false) ||
      (clang_sys_0_19_0.clang_4_0 or false);
    clang_sys_0_19_0.gte_clang_3_7 =
      (f.clang_sys_0_19_0.gte_clang_3_7 or false) ||
      (f.clang_sys_0_19_0.clang_3_7 or false) ||
      (clang_sys_0_19_0.clang_3_7 or false) ||
      (f.clang_sys_0_19_0.clang_3_8 or false) ||
      (clang_sys_0_19_0.clang_3_8 or false) ||
      (f.clang_sys_0_19_0.clang_3_9 or false) ||
      (clang_sys_0_19_0.clang_3_9 or false) ||
      (f.clang_sys_0_19_0.clang_4_0 or false) ||
      (clang_sys_0_19_0.clang_4_0 or false);
    clang_sys_0_19_0.gte_clang_3_8 =
      (f.clang_sys_0_19_0.gte_clang_3_8 or false) ||
      (f.clang_sys_0_19_0.clang_3_8 or false) ||
      (clang_sys_0_19_0.clang_3_8 or false) ||
      (f.clang_sys_0_19_0.clang_3_9 or false) ||
      (clang_sys_0_19_0.clang_3_9 or false) ||
      (f.clang_sys_0_19_0.clang_4_0 or false) ||
      (clang_sys_0_19_0.clang_4_0 or false);
    clang_sys_0_19_0.gte_clang_3_9 =
      (f.clang_sys_0_19_0.gte_clang_3_9 or false) ||
      (f.clang_sys_0_19_0.clang_3_9 or false) ||
      (clang_sys_0_19_0.clang_3_9 or false) ||
      (f.clang_sys_0_19_0.clang_4_0 or false) ||
      (clang_sys_0_19_0.clang_4_0 or false);
    clang_sys_0_19_0.gte_clang_4_0 =
      (f.clang_sys_0_19_0.gte_clang_4_0 or false) ||
      (f.clang_sys_0_19_0.clang_4_0 or false) ||
      (clang_sys_0_19_0.clang_4_0 or false);
    clang_sys_0_19_0.libloading =
      (f.clang_sys_0_19_0.libloading or false) ||
      (f.clang_sys_0_19_0.runtime or false) ||
      (clang_sys_0_19_0.runtime or false);
    glob_0_2_11.default = true;
    libc_0_2_40.default = true;
    libloading_0_4_3.default = true;
  }) [ bitflags_0_9_1_features glob_0_2_11_features libc_0_2_40_features libloading_0_4_3_features glob_0_2_11_features ];
  clap_2_31_2 = { features?(clap_2_31_2_features {}) }: clap_2_31_2_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 textwrap_0_9_0 unicode_width_0_1_4 ]
      ++ (if features.clap_2_31_2.atty or false then [ atty_0_2_8 ] else [])
      ++ (if features.clap_2_31_2.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_31_2.vec_map or false then [ vec_map_0_8_0 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_31_2.ansi_term or false then [ ansi_term_0_11_0 ] else [])) else []);
    features = mkFeatures (features.clap_2_31_2 or {});
  };
  clap_2_31_2_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = true;
    atty_0_2_8.default = true;
    bitflags_1_0_1.default = true;
    clap_2_31_2.ansi_term =
      (f.clap_2_31_2.ansi_term or false) ||
      (f.clap_2_31_2.color or false) ||
      (clap_2_31_2.color or false);
    clap_2_31_2.atty =
      (f.clap_2_31_2.atty or false) ||
      (f.clap_2_31_2.color or false) ||
      (clap_2_31_2.color or false);
    clap_2_31_2.clippy =
      (f.clap_2_31_2.clippy or false) ||
      (f.clap_2_31_2.lints or false) ||
      (clap_2_31_2.lints or false);
    clap_2_31_2.color =
      (f.clap_2_31_2.color or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.default = (f.clap_2_31_2.default or true);
    clap_2_31_2.strsim =
      (f.clap_2_31_2.strsim or false) ||
      (f.clap_2_31_2.suggestions or false) ||
      (clap_2_31_2.suggestions or false);
    clap_2_31_2.suggestions =
      (f.clap_2_31_2.suggestions or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.term_size =
      (f.clap_2_31_2.term_size or false) ||
      (f.clap_2_31_2.wrap_help or false) ||
      (clap_2_31_2.wrap_help or false);
    clap_2_31_2.vec_map =
      (f.clap_2_31_2.vec_map or false) ||
      (f.clap_2_31_2.default or false) ||
      (clap_2_31_2.default or false);
    clap_2_31_2.yaml =
      (f.clap_2_31_2.yaml or false) ||
      (f.clap_2_31_2.doc or false) ||
      (clap_2_31_2.doc or false);
    clap_2_31_2.yaml-rust =
      (f.clap_2_31_2.yaml-rust or false) ||
      (f.clap_2_31_2.yaml or false) ||
      (clap_2_31_2.yaml or false);
    strsim_0_7_0.default = true;
    textwrap_0_9_0.default = true;
    textwrap_0_9_0.term_size =
      (f.textwrap_0_9_0.term_size or false) ||
      (clap_2_31_2.wrap_help or false) ||
      (f.clap_2_31_2.wrap_help or false);
    unicode_width_0_1_4.default = true;
    vec_map_0_8_0.default = true;
  }) [ atty_0_2_8_features bitflags_1_0_1_features strsim_0_7_0_features textwrap_0_9_0_features unicode_width_0_1_4_features vec_map_0_8_0_features ansi_term_0_11_0_features ];
  combine_2_5_2 = { features?(combine_2_5_2_features {}) }: combine_2_5_2_ {
    dependencies = mapFeatures features ([ ascii_0_7_1 byteorder_1_2_2 ]);
    features = mkFeatures (features.combine_2_5_2 or {});
  };
  combine_2_5_2_features = f: updateFeatures f (rec {
    ascii_0_7_1.default = true;
    byteorder_1_2_2.default = true;
    combine_2_5_2.default = (f.combine_2_5_2.default or true);
    combine_2_5_2.regex =
      (f.combine_2_5_2.regex or false) ||
      (f.combine_2_5_2.doc or false) ||
      (combine_2_5_2.doc or false);
  }) [ ascii_0_7_1_features byteorder_1_2_2_features ];
  enum_primitive_0_1_1 = { features?(enum_primitive_0_1_1_features {}) }: enum_primitive_0_1_1_ {
    dependencies = mapFeatures features ([ num_traits_0_1_43 ]);
  };
  enum_primitive_0_1_1_features = f: updateFeatures f (rec {
    enum_primitive_0_1_1.default = (f.enum_primitive_0_1_1.default or true);
    num_traits_0_1_43.default = (f.num_traits_0_1_43.default or false);
  }) [ num_traits_0_1_43_features ];
  env_logger_0_4_3 = { features?(env_logger_0_4_3_features {}) }: env_logger_0_4_3_ {
    dependencies = mapFeatures features ([ log_0_3_9 ]
      ++ (if features.env_logger_0_4_3.regex or false then [ regex_0_2_10 ] else []));
    features = mkFeatures (features.env_logger_0_4_3 or {});
  };
  env_logger_0_4_3_features = f: updateFeatures f (rec {
    env_logger_0_4_3.default = (f.env_logger_0_4_3.default or true);
    env_logger_0_4_3.regex =
      (f.env_logger_0_4_3.regex or false) ||
      (f.env_logger_0_4_3.default or false) ||
      (env_logger_0_4_3.default or false);
    log_0_3_9.default = true;
    regex_0_2_10.default = true;
  }) [ log_0_3_9_features regex_0_2_10_features ];
  env_logger_0_5_6 = { features?(env_logger_0_5_6_features {}) }: env_logger_0_5_6_ {
    dependencies = mapFeatures features ([ atty_0_2_8 humantime_1_1_1 log_0_4_1 termcolor_0_3_6 ]
      ++ (if features.env_logger_0_5_6.regex or false then [ regex_0_2_10 ] else []));
    features = mkFeatures (features.env_logger_0_5_6 or {});
  };
  env_logger_0_5_6_features = f: updateFeatures f (rec {
    atty_0_2_8.default = true;
    env_logger_0_5_6.default = (f.env_logger_0_5_6.default or true);
    env_logger_0_5_6.regex =
      (f.env_logger_0_5_6.regex or false) ||
      (f.env_logger_0_5_6.default or false) ||
      (env_logger_0_5_6.default or false);
    humantime_1_1_1.default = true;
    log_0_4_1.default = true;
    log_0_4_1.std = true;
    regex_0_2_10.default = true;
    termcolor_0_3_6.default = true;
  }) [ atty_0_2_8_features humantime_1_1_1_features log_0_4_1_features regex_0_2_10_features termcolor_0_3_6_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_5 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_5.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_5_features ];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_1_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  glob_0_2_11 = { features?(glob_0_2_11_features {}) }: glob_0_2_11_ {};
  glob_0_2_11_features = f: updateFeatures f (rec {
    glob_0_2_11.default = (f.glob_0_2_11.default or true);
  }) [];
  humantime_1_1_1 = { features?(humantime_1_1_1_features {}) }: humantime_1_1_1_ {
    dependencies = mapFeatures features ([ quick_error_1_2_1 ]);
  };
  humantime_1_1_1_features = f: updateFeatures f (rec {
    humantime_1_1_1.default = (f.humantime_1_1_1.default or true);
    quick_error_1_2_1.default = true;
  }) [ quick_error_1_2_1_features ];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_0_0 = { features?(lazy_static_1_0_0_features {}) }: lazy_static_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_0 or {});
  };
  lazy_static_1_0_0_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.compiletest_rs =
      (f.lazy_static_1_0_0.compiletest_rs or false) ||
      (f.lazy_static_1_0_0.compiletest or false) ||
      (lazy_static_1_0_0.compiletest or false);
    lazy_static_1_0_0.default = (f.lazy_static_1_0_0.default or true);
    lazy_static_1_0_0.nightly =
      (f.lazy_static_1_0_0.nightly or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
    lazy_static_1_0_0.spin =
      (f.lazy_static_1_0_0.spin or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
  }) [];
  libc_0_2_40 = { features?(libc_0_2_40_features {}) }: libc_0_2_40_ {
    features = mkFeatures (features.libc_0_2_40 or {});
  };
  libc_0_2_40_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or true);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (f.libc_0_2_40.default or false) ||
      (libc_0_2_40.default or false);
  }) [];
  libloading_0_4_3 = { features?(libloading_0_4_3_features {}) }: libloading_0_4_3_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 ])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  libloading_0_4_3_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    lazy_static_1_0_0.default = true;
    libloading_0_4_3.default = (f.libloading_0_4_3.default or true);
    winapi_0_2_8.default = true;
  }) [ lazy_static_1_0_0_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_1 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_1.default = true;
    log_0_4_1.max_level_debug =
      (f.log_0_4_1.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_1.max_level_error =
      (f.log_0_4_1.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_1.max_level_info =
      (f.log_0_4_1.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_1.max_level_off =
      (f.log_0_4_1.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_1.max_level_trace =
      (f.log_0_4_1.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_1.max_level_warn =
      (f.log_0_4_1.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_1.release_max_level_debug =
      (f.log_0_4_1.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_1.release_max_level_error =
      (f.log_0_4_1.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_1.release_max_level_info =
      (f.log_0_4_1.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_1.release_max_level_off =
      (f.log_0_4_1.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_1.release_max_level_trace =
      (f.log_0_4_1.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_1.release_max_level_warn =
      (f.log_0_4_1.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_1.std =
      (f.log_0_4_1.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_1_features ];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_2_features ];
  marduk_0_1_0 = { features?(marduk_0_1_0_features {}) }: marduk_0_1_0_ {
    dependencies = mapFeatures features ([ bap_0_1_0 env_logger_0_5_6 lazy_static_1_0_0 log_0_4_1 mktemp_0_3_1 mycroft_0_0_1 mycroft_macros_0_0_1 mycroft_support_0_0_1 num_traits_0_1_43 ]);
  };
  marduk_0_1_0_features = f: updateFeatures f (rec {
    bap_0_1_0.default = true;
    env_logger_0_5_6.default = true;
    lazy_static_1_0_0.default = true;
    log_0_4_1.default = true;
    marduk_0_1_0.default = (f.marduk_0_1_0.default or true);
    mktemp_0_3_1.default = true;
    mycroft_0_0_1.default = true;
    mycroft_macros_0_0_1.default = true;
    mycroft_support_0_0_1.default = true;
    num_traits_0_1_43.default = true;
  }) [ bap_0_1_0_features env_logger_0_5_6_features lazy_static_1_0_0_features log_0_4_1_features mktemp_0_3_1_features mycroft_0_0_1_features mycroft_macros_0_0_1_features mycroft_support_0_0_1_features num_traits_0_1_43_features ];
  memchr_1_0_2 = { features?(memchr_1_0_2_features {}) }: memchr_1_0_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_1_0_2.libc or false then [ libc_0_2_40 ] else []));
    features = mkFeatures (features.memchr_1_0_2 or {});
  };
  memchr_1_0_2_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.use_std or false);
    memchr_1_0_2.default = (f.memchr_1_0_2.default or true);
    memchr_1_0_2.libc =
      (f.memchr_1_0_2.libc or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false) ||
      (f.memchr_1_0_2.use_std or false) ||
      (memchr_1_0_2.use_std or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false);
  }) [ libc_0_2_40_features ];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_40 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_40_features ];
  mktemp_0_3_1 = { features?(mktemp_0_3_1_features {}) }: mktemp_0_3_1_ {
    dependencies = mapFeatures features ([ uuid_0_1_18 ]);
  };
  mktemp_0_3_1_features = f: updateFeatures f (rec {
    mktemp_0_3_1.default = (f.mktemp_0_3_1.default or true);
    uuid_0_1_18.default = true;
  }) [ uuid_0_1_18_features ];
  mycroft_0_0_1 = { features?(mycroft_0_0_1_features {}) }: mycroft_0_0_1_ {
    dependencies = mapFeatures features ([ combine_2_5_2 error_chain_0_11_0 quote_0_3_15 syn_0_11_11 ]);
  };
  mycroft_0_0_1_features = f: updateFeatures f (rec {
    combine_2_5_2.default = true;
    error_chain_0_11_0.default = true;
    mycroft_0_0_1.default = (f.mycroft_0_0_1.default or true);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
  }) [ combine_2_5_2_features error_chain_0_11_0_features quote_0_3_15_features syn_0_11_11_features ];
  mycroft_macros_0_0_1 = { features?(mycroft_macros_0_0_1_features {}) }: mycroft_macros_0_0_1_ {
    dependencies = mapFeatures features ([ mycroft_macros_impl_0_0_1 proc_macro_hack_0_4_0 ]);
  };
  mycroft_macros_0_0_1_features = f: updateFeatures f (rec {
    mycroft_macros_0_0_1.default = (f.mycroft_macros_0_0_1.default or true);
    mycroft_macros_impl_0_0_1.default = true;
    proc_macro_hack_0_4_0.default = true;
  }) [ mycroft_macros_impl_0_0_1_features proc_macro_hack_0_4_0_features ];
  mycroft_macros_impl_0_0_1 = { features?(mycroft_macros_impl_0_0_1_features {}) }: mycroft_macros_impl_0_0_1_ {
    dependencies = mapFeatures features ([ combine_2_5_2 mycroft_0_0_1 proc_macro_hack_0_4_0 quote_0_4_2 syn_0_11_11 ]);
  };
  mycroft_macros_impl_0_0_1_features = f: updateFeatures f (rec {
    combine_2_5_2.default = true;
    mycroft_0_0_1.default = true;
    mycroft_macros_impl_0_0_1.default = (f.mycroft_macros_impl_0_0_1.default or true);
    proc_macro_hack_0_4_0.default = true;
    quote_0_4_2.default = true;
    syn_0_11_11.default = true;
    syn_0_11_11.full = true;
    syn_0_11_11.parsing = true;
    syn_0_11_11.printing = true;
  }) [ combine_2_5_2_features mycroft_0_0_1_features proc_macro_hack_0_4_0_features quote_0_4_2_features syn_0_11_11_features ];
  mycroft_support_0_0_1 = { features?(mycroft_support_0_0_1_features {}) }: mycroft_support_0_0_1_ {
    dependencies = mapFeatures features ([ log_0_4_1 ]);
  };
  mycroft_support_0_0_1_features = f: updateFeatures f (rec {
    log_0_4_1.default = true;
    mycroft_support_0_0_1.default = (f.mycroft_support_0_0_1.default or true);
  }) [ log_0_4_1_features ];
  nom_3_2_1 = { features?(nom_3_2_1_features {}) }: nom_3_2_1_ {
    dependencies = mapFeatures features ([ memchr_1_0_2 ]);
    features = mkFeatures (features.nom_3_2_1 or {});
  };
  nom_3_2_1_features = f: updateFeatures f (rec {
    memchr_1_0_2.default = (f.memchr_1_0_2.default or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (nom_3_2_1.std or false) ||
      (f.nom_3_2_1.std or false);
    nom_3_2_1.compiler_error =
      (f.nom_3_2_1.compiler_error or false) ||
      (f.nom_3_2_1.nightly or false) ||
      (nom_3_2_1.nightly or false);
    nom_3_2_1.default = (f.nom_3_2_1.default or true);
    nom_3_2_1.lazy_static =
      (f.nom_3_2_1.lazy_static or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.regex =
      (f.nom_3_2_1.regex or false) ||
      (f.nom_3_2_1.regexp or false) ||
      (nom_3_2_1.regexp or false);
    nom_3_2_1.regexp =
      (f.nom_3_2_1.regexp or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.std =
      (f.nom_3_2_1.std or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
    nom_3_2_1.stream =
      (f.nom_3_2_1.stream or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
  }) [ memchr_1_0_2_features ];
  num_0_1_42 = { features?(num_0_1_42_features {}) }: num_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_iter_0_1_35 num_traits_0_2_2 ]
      ++ (if features.num_0_1_42.num-bigint or false then [ num_bigint_0_1_43 ] else [])
      ++ (if features.num_0_1_42.num-complex or false then [ num_complex_0_1_43 ] else [])
      ++ (if features.num_0_1_42.num-rational or false then [ num_rational_0_1_42 ] else []));
    features = mkFeatures (features.num_0_1_42 or {});
  };
  num_0_1_42_features = f: updateFeatures f (rec {
    num_0_1_42.bigint =
      (f.num_0_1_42.bigint or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.complex =
      (f.num_0_1_42.complex or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.default = (f.num_0_1_42.default or true);
    num_0_1_42.num-bigint =
      (f.num_0_1_42.num-bigint or false) ||
      (f.num_0_1_42.bigint or false) ||
      (num_0_1_42.bigint or false);
    num_0_1_42.num-complex =
      (f.num_0_1_42.num-complex or false) ||
      (f.num_0_1_42.complex or false) ||
      (num_0_1_42.complex or false);
    num_0_1_42.num-rational =
      (f.num_0_1_42.num-rational or false) ||
      (f.num_0_1_42.rational or false) ||
      (num_0_1_42.rational or false);
    num_0_1_42.rational =
      (f.num_0_1_42.rational or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.rustc-serialize =
      (f.num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_bigint_0_1_43.default = true;
    num_bigint_0_1_43.rustc-serialize =
      (f.num_bigint_0_1_43.rustc-serialize or false) ||
      (num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.rustc-serialize or false);
    num_bigint_0_1_43.serde =
      (f.num_bigint_0_1_43.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_complex_0_1_43.default = true;
    num_complex_0_1_43.rustc-serialize =
      (f.num_complex_0_1_43.rustc-serialize or false) ||
      (num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.rustc-serialize or false);
    num_complex_0_1_43.serde =
      (f.num_complex_0_1_43.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_integer_0_1_36.default = true;
    num_iter_0_1_35.default = true;
    num_rational_0_1_42.default = true;
    num_rational_0_1_42.rustc-serialize =
      (f.num_rational_0_1_42.rustc-serialize or false) ||
      (num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.rustc-serialize or false);
    num_rational_0_1_42.serde =
      (f.num_rational_0_1_42.serde or false) ||
      (num_0_1_42.serde or false) ||
      (f.num_0_1_42.serde or false);
    num_traits_0_2_2.default = true;
  }) [ num_bigint_0_1_43_features num_complex_0_1_43_features num_integer_0_1_36_features num_iter_0_1_35_features num_rational_0_1_42_features num_traits_0_2_2_features ];
  num_bigint_0_1_43 = { features?(num_bigint_0_1_43_features {}) }: num_bigint_0_1_43_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_2 ]
      ++ (if features.num_bigint_0_1_43.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.num_bigint_0_1_43.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_bigint_0_1_43 or {});
  };
  num_bigint_0_1_43_features = f: updateFeatures f (rec {
    num_bigint_0_1_43.default = (f.num_bigint_0_1_43.default or true);
    num_bigint_0_1_43.rand =
      (f.num_bigint_0_1_43.rand or false) ||
      (f.num_bigint_0_1_43.default or false) ||
      (num_bigint_0_1_43.default or false);
    num_bigint_0_1_43.rustc-serialize =
      (f.num_bigint_0_1_43.rustc-serialize or false) ||
      (f.num_bigint_0_1_43.default or false) ||
      (num_bigint_0_1_43.default or false);
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    num_traits_0_2_2.std = true;
    rand_0_4_2.default = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_integer_0_1_36_features num_traits_0_2_2_features rand_0_4_2_features rustc_serialize_0_3_24_features ];
  num_complex_0_1_43 = { features?(num_complex_0_1_43_features {}) }: num_complex_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_2 ]
      ++ (if features.num_complex_0_1_43.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_complex_0_1_43 or {});
  };
  num_complex_0_1_43_features = f: updateFeatures f (rec {
    num_complex_0_1_43.default = (f.num_complex_0_1_43.default or true);
    num_complex_0_1_43.rustc-serialize =
      (f.num_complex_0_1_43.rustc-serialize or false) ||
      (f.num_complex_0_1_43.default or false) ||
      (num_complex_0_1_43.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    num_traits_0_2_2.std = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_traits_0_2_2_features rustc_serialize_0_3_24_features ];
  num_integer_0_1_36 = { features?(num_integer_0_1_36_features {}) }: num_integer_0_1_36_ {
    dependencies = mapFeatures features ([ num_traits_0_2_2 ]);
    features = mkFeatures (features.num_integer_0_1_36 or {});
  };
  num_integer_0_1_36_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or true);
    num_integer_0_1_36.std =
      (f.num_integer_0_1_36.std or false) ||
      (f.num_integer_0_1_36.default or false) ||
      (num_integer_0_1_36.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
  }) [ num_traits_0_2_2_features ];
  num_iter_0_1_35 = { features?(num_iter_0_1_35_features {}) }: num_iter_0_1_35_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_2 ]);
    features = mkFeatures (features.num_iter_0_1_35 or {});
  };
  num_iter_0_1_35_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_iter_0_1_35.default = (f.num_iter_0_1_35.default or true);
    num_iter_0_1_35.std =
      (f.num_iter_0_1_35.std or false) ||
      (f.num_iter_0_1_35.default or false) ||
      (num_iter_0_1_35.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
  }) [ num_integer_0_1_36_features num_traits_0_2_2_features ];
  num_rational_0_1_42 = { features?(num_rational_0_1_42_features {}) }: num_rational_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_2 ]
      ++ (if features.num_rational_0_1_42.num-bigint or false then [ num_bigint_0_1_43 ] else [])
      ++ (if features.num_rational_0_1_42.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_rational_0_1_42 or {});
  };
  num_rational_0_1_42_features = f: updateFeatures f (rec {
    num_bigint_0_1_43.default = true;
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_rational_0_1_42.bigint =
      (f.num_rational_0_1_42.bigint or false) ||
      (f.num_rational_0_1_42.default or false) ||
      (num_rational_0_1_42.default or false);
    num_rational_0_1_42.default = (f.num_rational_0_1_42.default or true);
    num_rational_0_1_42.num-bigint =
      (f.num_rational_0_1_42.num-bigint or false) ||
      (f.num_rational_0_1_42.bigint or false) ||
      (num_rational_0_1_42.bigint or false);
    num_rational_0_1_42.rustc-serialize =
      (f.num_rational_0_1_42.rustc-serialize or false) ||
      (f.num_rational_0_1_42.default or false) ||
      (num_rational_0_1_42.default or false);
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or false);
    num_traits_0_2_2.std = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_bigint_0_1_43_features num_integer_0_1_36_features num_traits_0_2_2_features rustc_serialize_0_3_24_features ];
  num_traits_0_1_43 = { features?(num_traits_0_1_43_features {}) }: num_traits_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_2 ]);
  };
  num_traits_0_1_43_features = f: updateFeatures f (rec {
    num_traits_0_1_43.default = (f.num_traits_0_1_43.default or true);
    num_traits_0_2_2.default = true;
  }) [ num_traits_0_2_2_features ];
  num_traits_0_2_2 = { features?(num_traits_0_2_2_features {}) }: num_traits_0_2_2_ {
    features = mkFeatures (features.num_traits_0_2_2 or {});
  };
  num_traits_0_2_2_features = f: updateFeatures f (rec {
    num_traits_0_2_2.default = (f.num_traits_0_2_2.default or true);
    num_traits_0_2_2.std =
      (f.num_traits_0_2_2.std or false) ||
      (f.num_traits_0_2_2.default or false) ||
      (num_traits_0_2_2.default or false);
  }) [];
  peeking_take_while_0_1_2 = { features?(peeking_take_while_0_1_2_features {}) }: peeking_take_while_0_1_2_ {};
  peeking_take_while_0_1_2_features = f: updateFeatures f (rec {
    peeking_take_while_0_1_2.default = (f.peeking_take_while_0_1_2.default or true);
  }) [];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f (rec {
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  proc_macro_hack_0_4_0 = { features?(proc_macro_hack_0_4_0_features {}) }: proc_macro_hack_0_4_0_ {
    dependencies = mapFeatures features ([ proc_macro_hack_impl_0_4_0 ]);
  };
  proc_macro_hack_0_4_0_features = f: updateFeatures f (rec {
    proc_macro_hack_0_4_0.default = (f.proc_macro_hack_0_4_0.default or true);
    proc_macro_hack_impl_0_4_0.default = true;
  }) [ proc_macro_hack_impl_0_4_0_features ];
  proc_macro_hack_impl_0_4_0 = { features?(proc_macro_hack_impl_0_4_0_features {}) }: proc_macro_hack_impl_0_4_0_ {};
  proc_macro_hack_impl_0_4_0_features = f: updateFeatures f (rec {
    proc_macro_hack_impl_0_4_0.default = (f.proc_macro_hack_impl_0_4_0.default or true);
  }) [];
  proc_macro2_0_2_3 = { features?(proc_macro2_0_2_3_features {}) }: proc_macro2_0_2_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_2_3 or {});
  };
  proc_macro2_0_2_3_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = (f.proc_macro2_0_2_3.default or true);
    proc_macro2_0_2_3.proc-macro =
      (f.proc_macro2_0_2_3.proc-macro or false) ||
      (f.proc_macro2_0_2_3.default or false) ||
      (proc_macro2_0_2_3.default or false) ||
      (f.proc_macro2_0_2_3.nightly or false) ||
      (proc_macro2_0_2_3.nightly or false);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  quasi_0_32_0 = { features?(quasi_0_32_0_features {}) }: quasi_0_32_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.quasi_0_32_0.syntex_errors or false then [ syntex_errors_0_58_1 ] else [])
      ++ (if features.quasi_0_32_0.syntex_syntax or false then [ syntex_syntax_0_58_1 ] else []));
    features = mkFeatures (features.quasi_0_32_0 or {});
  };
  quasi_0_32_0_features = f: updateFeatures f (rec {
    quasi_0_32_0.clippy =
      (f.quasi_0_32_0.clippy or false) ||
      (f.quasi_0_32_0.unstable-testing or false) ||
      (quasi_0_32_0.unstable-testing or false);
    quasi_0_32_0.default = (f.quasi_0_32_0.default or true);
    quasi_0_32_0.syntex_errors =
      (f.quasi_0_32_0.syntex_errors or false) ||
      (f.quasi_0_32_0.with-syntex or false) ||
      (quasi_0_32_0.with-syntex or false);
    quasi_0_32_0.syntex_syntax =
      (f.quasi_0_32_0.syntex_syntax or false) ||
      (f.quasi_0_32_0.with-syntex or false) ||
      (quasi_0_32_0.with-syntex or false);
    syntex_errors_0_58_1.default = true;
    syntex_syntax_0_58_1.default = true;
  }) [ syntex_errors_0_58_1_features syntex_syntax_0_58_1_features ];
  quasi_codegen_0_32_0 = { features?(quasi_codegen_0_32_0_features {}) }: quasi_codegen_0_32_0_ {
    dependencies = mapFeatures features ([ aster_0_41_0 ]
      ++ (if features.quasi_codegen_0_32_0.syntex or false then [ syntex_0_58_1 ] else [])
      ++ (if features.quasi_codegen_0_32_0.syntex_errors or false then [ syntex_errors_0_58_1 ] else [])
      ++ (if features.quasi_codegen_0_32_0.syntex_syntax or false then [ syntex_syntax_0_58_1 ] else []));
    features = mkFeatures (features.quasi_codegen_0_32_0 or {});
  };
  quasi_codegen_0_32_0_features = f: updateFeatures f (rec {
    aster_0_41_0.default = (f.aster_0_41_0.default or false);
    aster_0_41_0.with-syntex =
      (f.aster_0_41_0.with-syntex or false) ||
      (quasi_codegen_0_32_0.with-syntex or false) ||
      (f.quasi_codegen_0_32_0.with-syntex or false);
    quasi_codegen_0_32_0.clippy =
      (f.quasi_codegen_0_32_0.clippy or false) ||
      (f.quasi_codegen_0_32_0.unstable-testing or false) ||
      (quasi_codegen_0_32_0.unstable-testing or false);
    quasi_codegen_0_32_0.default = (f.quasi_codegen_0_32_0.default or true);
    quasi_codegen_0_32_0.syntex =
      (f.quasi_codegen_0_32_0.syntex or false) ||
      (f.quasi_codegen_0_32_0.with-syntex or false) ||
      (quasi_codegen_0_32_0.with-syntex or false);
    quasi_codegen_0_32_0.syntex_errors =
      (f.quasi_codegen_0_32_0.syntex_errors or false) ||
      (f.quasi_codegen_0_32_0.with-syntex or false) ||
      (quasi_codegen_0_32_0.with-syntex or false);
    quasi_codegen_0_32_0.syntex_syntax =
      (f.quasi_codegen_0_32_0.syntex_syntax or false) ||
      (f.quasi_codegen_0_32_0.with-syntex or false) ||
      (quasi_codegen_0_32_0.with-syntex or false);
    quasi_codegen_0_32_0.with-syntex =
      (f.quasi_codegen_0_32_0.with-syntex or false) ||
      (f.quasi_codegen_0_32_0.default or false) ||
      (quasi_codegen_0_32_0.default or false);
    syntex_0_58_1.default = true;
    syntex_errors_0_58_1.default = true;
    syntex_syntax_0_58_1.default = true;
  }) [ aster_0_41_0_features syntex_0_58_1_features syntex_errors_0_58_1_features syntex_syntax_0_58_1_features ];
  quick_error_1_2_1 = { features?(quick_error_1_2_1_features {}) }: quick_error_1_2_1_ {};
  quick_error_1_2_1_features = f: updateFeatures f (rec {
    quick_error_1_2_1.default = (f.quick_error_1_2_1.default or true);
  }) [];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  quote_0_4_2 = { features?(quote_0_4_2_features {}) }: quote_0_4_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 ]);
  };
  quote_0_4_2_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    quote_0_4_2.default = (f.quote_0_4_2.default or true);
  }) [ proc_macro2_0_2_3_features ];
  rand_0_3_22 = { features?(rand_0_3_22_features {}) }: rand_0_3_22_ {
    dependencies = mapFeatures features ([ libc_0_2_40 rand_0_4_2 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else []);
    features = mkFeatures (features.rand_0_3_22 or {});
  };
  rand_0_3_22_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_40.default = true;
    rand_0_3_22.default = (f.rand_0_3_22.default or true);
    rand_0_3_22.i128_support =
      (f.rand_0_3_22.i128_support or false) ||
      (f.rand_0_3_22.nightly or false) ||
      (rand_0_3_22.nightly or false);
    rand_0_4_2.default = true;
  }) [ libc_0_2_40_features rand_0_4_2_features fuchsia_zircon_0_3_3_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_40 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_40.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntsecapi = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_40_features winapi_0_3_4_features ];
  redox_syscall_0_1_37 = { features?(redox_syscall_0_1_37_features {}) }: redox_syscall_0_1_37_ {};
  redox_syscall_0_1_37_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = (f.redox_syscall_0_1_37.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_37 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_37_features ];
  regex_0_2_10 = { features?(regex_0_2_10_features {}) }: regex_0_2_10_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_5_3 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_10 or {});
  };
  regex_0_2_10_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_10.default = (f.regex_0_2_10.default or true);
    regex_0_2_10.pattern =
      (f.regex_0_2_10.pattern or false) ||
      (f.regex_0_2_10.unstable or false) ||
      (regex_0_2_10.unstable or false);
    regex_syntax_0_5_3.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_4_features memchr_2_0_1_features regex_syntax_0_5_3_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_5_3 = { features?(regex_syntax_0_5_3_features {}) }: regex_syntax_0_5_3_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_3_features = f: updateFeatures f (rec {
    regex_syntax_0_5_3.default = (f.regex_syntax_0_5_3.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  rustc_demangle_0_1_7 = { features?(rustc_demangle_0_1_7_features {}) }: rustc_demangle_0_1_7_ {};
  rustc_demangle_0_1_7_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_7.default = (f.rustc_demangle_0_1_7.default or true);
  }) [];
  rustc_serialize_0_3_24 = { features?(rustc_serialize_0_3_24_features {}) }: rustc_serialize_0_3_24_ {};
  rustc_serialize_0_3_24_features = f: updateFeatures f (rec {
    rustc_serialize_0_3_24.default = (f.rustc_serialize_0_3_24.default or true);
  }) [];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  syntex_0_58_1 = { features?(syntex_0_58_1_features {}) }: syntex_0_58_1_ {
    dependencies = mapFeatures features ([ syntex_errors_0_58_1 syntex_syntax_0_58_1 ]);
  };
  syntex_0_58_1_features = f: updateFeatures f (rec {
    syntex_0_58_1.default = (f.syntex_0_58_1.default or true);
    syntex_errors_0_58_1.default = true;
    syntex_syntax_0_58_1.default = true;
  }) [ syntex_errors_0_58_1_features syntex_syntax_0_58_1_features ];
  syntex_errors_0_58_1 = { features?(syntex_errors_0_58_1_features {}) }: syntex_errors_0_58_1_ {
    dependencies = mapFeatures features ([ libc_0_2_40 rustc_serialize_0_3_24 syntex_pos_0_58_1 term_0_4_6 unicode_xid_0_0_4 ]);
  };
  syntex_errors_0_58_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    rustc_serialize_0_3_24.default = true;
    syntex_errors_0_58_1.default = (f.syntex_errors_0_58_1.default or true);
    syntex_pos_0_58_1.default = true;
    term_0_4_6.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ libc_0_2_40_features rustc_serialize_0_3_24_features syntex_pos_0_58_1_features term_0_4_6_features unicode_xid_0_0_4_features ];
  syntex_pos_0_58_1 = { features?(syntex_pos_0_58_1_features {}) }: syntex_pos_0_58_1_ {
    dependencies = mapFeatures features ([ rustc_serialize_0_3_24 ]);
  };
  syntex_pos_0_58_1_features = f: updateFeatures f (rec {
    rustc_serialize_0_3_24.default = true;
    syntex_pos_0_58_1.default = (f.syntex_pos_0_58_1.default or true);
  }) [ rustc_serialize_0_3_24_features ];
  syntex_syntax_0_58_1 = { features?(syntex_syntax_0_58_1_features {}) }: syntex_syntax_0_58_1_ {
    dependencies = mapFeatures features ([ bitflags_0_8_2 log_0_3_9 rustc_serialize_0_3_24 syntex_errors_0_58_1 syntex_pos_0_58_1 unicode_xid_0_0_4 ]);
  };
  syntex_syntax_0_58_1_features = f: updateFeatures f (rec {
    bitflags_0_8_2.default = true;
    log_0_3_9.default = true;
    rustc_serialize_0_3_24.default = true;
    syntex_errors_0_58_1.default = true;
    syntex_pos_0_58_1.default = true;
    syntex_syntax_0_58_1.default = (f.syntex_syntax_0_58_1.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ bitflags_0_8_2_features log_0_3_9_features rustc_serialize_0_3_24_features syntex_errors_0_58_1_features syntex_pos_0_58_1_features unicode_xid_0_0_4_features ];
  term_0_4_6 = { features?(term_0_4_6_features {}) }: term_0_4_6_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  term_0_4_6_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    term_0_4_6.default = (f.term_0_4_6.default or true);
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  termcolor_0_3_6 = { features?(termcolor_0_3_6_features {}) }: termcolor_0_3_6_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ wincolor_0_1_6 ]) else []);
  };
  termcolor_0_3_6_features = f: updateFeatures f (rec {
    termcolor_0_3_6.default = (f.termcolor_0_3_6.default or true);
    wincolor_0_1_6.default = true;
  }) [ wincolor_0_1_6_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_40_features redox_syscall_0_1_37_features redox_termios_0_1_1_features ];
  textwrap_0_9_0 = { features?(textwrap_0_9_0_features {}) }: textwrap_0_9_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_4 ]);
  };
  textwrap_0_9_0_features = f: updateFeatures f (rec {
    textwrap_0_9_0.default = (f.textwrap_0_9_0.default or true);
    unicode_width_0_1_4.default = true;
  }) [ unicode_width_0_1_4_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_0_features unreachable_1_0_0_features ];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f (rec {
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  uuid_0_1_18 = { features?(uuid_0_1_18_features {}) }: uuid_0_1_18_ {
    dependencies = mapFeatures features ([ rand_0_3_22 rustc_serialize_0_3_24 ]);
  };
  uuid_0_1_18_features = f: updateFeatures f (rec {
    rand_0_3_22.default = true;
    rustc_serialize_0_3_24.default = true;
    uuid_0_1_18.default = (f.uuid_0_1_18.default or true);
  }) [ rand_0_3_22_features rustc_serialize_0_3_24_features ];
  vec_map_0_8_0 = { features?(vec_map_0_8_0_features {}) }: vec_map_0_8_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_0 or {});
  };
  vec_map_0_8_0_features = f: updateFeatures f (rec {
    vec_map_0_8_0.default = (f.vec_map_0_8_0.default or true);
    vec_map_0_8_0.serde =
      (f.vec_map_0_8_0.serde or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
    vec_map_0_8_0.serde_derive =
      (f.vec_map_0_8_0.serde_derive or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  which_1_0_5 = { features?(which_1_0_5_features {}) }: which_1_0_5_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
  };
  which_1_0_5_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    which_1_0_5.default = (f.which_1_0_5.default or true);
  }) [ libc_0_2_40_features ];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_4 = { features?(winapi_0_3_4_features {}) }: winapi_0_3_4_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_4 or {});
  };
  winapi_0_3_4_features = f: updateFeatures f (rec {
    winapi_0_3_4.default = (f.winapi_0_3_4.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  wincolor_0_1_6 = { features?(wincolor_0_1_6_features {}) }: wincolor_0_1_6_ {
    dependencies = mapFeatures features ([ winapi_0_3_4 ]);
  };
  wincolor_0_1_6_features = f: updateFeatures f (rec {
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincon = true;
    wincolor_0_1_6.default = (f.wincolor_0_1_6.default or true);
  }) [ winapi_0_3_4_features ];
}
