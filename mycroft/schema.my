// An ELF file provided as system input
file {
  name: String,
  contents: Bytes
}

// A loadable segment from a provided file
segment {
  file_name: String,
  contents: Bytes,
  start: u64,
  end: u64,
  read: bool,
  write: bool,
  execute: bool
}

// Symbols provided by the object. Only relevant for .a/.o/.so for semantics, but used if provided for normal objects to find function entry points
sym {
  loc: Loc,
  name: String,
  end: u64 
}

// The set of all known functions. This can be used to e.g. check whether a remote call should be skipped or resolved 
all_funcs {
  names: StringSet^union
}

// Semantics of the instruction at the provided location
lift {
  loc: Loc,
  bil: Sema,
  fallthrough: Loc,
  disassembly: String,
  is_call: bool,
  is_ret: bool
}

succ_over {
  src: Loc,
  dst: Loc
}

live {
  loc: Loc
}

prog_arch {
  file_name: String,
  arch: Arch
}

link_pad {
  pad_name: String,
  pad_loc: Loc
}

succ {
  src: Loc,
  dst: Loc,
  is_call: bool
}

free_call {
  loc: Loc,
  args: Vusize
}

malloc_call {
  loc: Loc
}

func {
  base: Loc,
  contains: Loc
}

call_site {
  call_loc: Loc,
  target_loc: Loc,
  ret_loc: Loc
}

skip_func {
    loc: Loc
}
