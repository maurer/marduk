?func: func {
    file_name: file,
    entry: entry,
    addr: addr
}
?call_site: call_site {
    call_file: call_file,
    call_addr: call_addr,
    dst_file,
    dst_addr
}
?succ: succ {
    file_name: name,
    src_addr: src,
    dst_addr: dst,
    is_call: call 
}
?get_disasms: lift {file_name: file_name, address: addr, disassembly: disasm}
?get_free_call: free_call {file_name: name, addr: addr}
?get_malloc_call: malloc_call {file_name: name, addr: addr}
?get_alias: path_alias {initial_file: file0, initial_addr: addr0, current_file: file, current_addr: addr, aliased_var: a_var, freed: freed, alias_set: alias_set}
?get_uaf_flow: use_after_free_flow {
    initial_file: name,
    initial_addr: addr,
    alias_set: alias
}
?get_uaf: use_after_free {
    initial_file: name,
    initial_addr: addr,
    alias_set: alias
}
?get_uaf_flow_full: use_after_free_flow {
    initial_file,
    initial_addr,
    alias_set,
    final_file,
    final_addr,
    loc
}
?get_uaf_full: use_after_free {
    initial_file: name,
    initial_addr: addr,
    alias_set: alias,
    final_file: use_name,
    final_addr: use_addr,
    loc: use_var
}

?link_pad: link_pad {file_name: name, pad_name: pad_name, pad_addr: addr}
?live: live {file_name: name, addr: addr}
?trace: path_alias_trace {initial_file, initial_addr, alias_set, current_file, current_addr, aliased_var, freed, steps}
?flow: path_alias {initial_file, initial_addr, alias_set, current_file, current_addr, aliased_var, freed}
