?call_site: call_site { call_loc, target_loc, ret_loc }
?succ: succ { src, dst, is_call }
?sym: sym { loc, name, end }
?get_disasms: lift {loc, disassembly: disasm}
?get_free_call: free_call {loc}
?get_malloc_call: malloc_call {loc}
?link_pad: link_pad {pad_loc, pad_name}
?live: live {loc}
?uaf: uaf(_, free, use_)
?deref_var: deref_var(var, loc)
?uaf_flow: uaf_flow(_, free, use_)
?flow: ~flow_in(loc, pts)
?flow_out: ~flow_out(loc, pts)
?constraints: constraint(loc, c)
?all_uaf: all_uaf(_, free, use_)
?context_flow: context_flow(_, free, use_)
?func: func {base, contains}
?live_vars: live_vars { loc, vars }
?used_var: used_var { loc, var }
?uncalled: uncalled { loc }
